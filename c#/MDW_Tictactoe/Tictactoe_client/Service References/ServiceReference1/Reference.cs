//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tictactoe_client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITictactoe", CallbackContract=typeof(Tictactoe_client.ServiceReference1.ITictactoeCallback))]
    public interface ITictactoe {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/MakeMove", ReplyAction="http://tempuri.org/ITictactoe/MakeMoveResponse")]
        void MakeMove(string username, int buttonId, string XO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/MakeMove", ReplyAction="http://tempuri.org/ITictactoe/MakeMoveResponse")]
        System.Threading.Tasks.Task MakeMoveAsync(string username, int buttonId, string XO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/GetName", ReplyAction="http://tempuri.org/ITictactoe/GetNameResponse")]
        string GetName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/GetName", ReplyAction="http://tempuri.org/ITictactoe/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/AddPlayerToList", ReplyAction="http://tempuri.org/ITictactoe/AddPlayerToListResponse")]
        void AddPlayerToList(string playername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/AddPlayerToList", ReplyAction="http://tempuri.org/ITictactoe/AddPlayerToListResponse")]
        System.Threading.Tasks.Task AddPlayerToListAsync(string playername);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/SubscribeToGame")]
        void SubscribeToGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/SubscribeToGame")]
        System.Threading.Tasks.Task SubscribeToGameAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/FireJoinGameEvent")]
        void FireJoinGameEvent(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/FireJoinGameEvent")]
        System.Threading.Tasks.Task FireJoinGameEventAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/Chat", ReplyAction="http://tempuri.org/ITictactoe/ChatResponse")]
        void Chat(string username, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITictactoe/Chat", ReplyAction="http://tempuri.org/ITictactoe/ChatResponse")]
        System.Threading.Tasks.Task ChatAsync(string username, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITictactoeCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/onLoggingIn")]
        void onLoggingIn(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/OnChatCallback")]
        void OnChatCallback(string username, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITictactoe/OnMoveCallback")]
        void OnMoveCallback(int buttonId, string XO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITictactoeChannel : Tictactoe_client.ServiceReference1.ITictactoe, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TictactoeClient : System.ServiceModel.DuplexClientBase<Tictactoe_client.ServiceReference1.ITictactoe>, Tictactoe_client.ServiceReference1.ITictactoe {
        
        public TictactoeClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TictactoeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TictactoeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TictactoeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TictactoeClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void MakeMove(string username, int buttonId, string XO) {
            base.Channel.MakeMove(username, buttonId, XO);
        }
        
        public System.Threading.Tasks.Task MakeMoveAsync(string username, int buttonId, string XO) {
            return base.Channel.MakeMoveAsync(username, buttonId, XO);
        }
        
        public string GetName(string username) {
            return base.Channel.GetName(username);
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync(string username) {
            return base.Channel.GetNameAsync(username);
        }
        
        public void AddPlayerToList(string playername) {
            base.Channel.AddPlayerToList(playername);
        }
        
        public System.Threading.Tasks.Task AddPlayerToListAsync(string playername) {
            return base.Channel.AddPlayerToListAsync(playername);
        }
        
        public void SubscribeToGame() {
            base.Channel.SubscribeToGame();
        }
        
        public System.Threading.Tasks.Task SubscribeToGameAsync() {
            return base.Channel.SubscribeToGameAsync();
        }
        
        public void FireJoinGameEvent(string username) {
            base.Channel.FireJoinGameEvent(username);
        }
        
        public System.Threading.Tasks.Task FireJoinGameEventAsync(string username) {
            return base.Channel.FireJoinGameEventAsync(username);
        }
        
        public void Chat(string username, string message) {
            base.Channel.Chat(username, message);
        }
        
        public System.Threading.Tasks.Task ChatAsync(string username, string message) {
            return base.Channel.ChatAsync(username, message);
        }
    }
}
